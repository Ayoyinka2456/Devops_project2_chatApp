---
- name: Copy and apply Kubernetes deployment
  hosts: k8s-workstation
  become: yes
  tasks:
    - name: Copy NGINX_IP.txt to the k8s-admin-setup directory
      copy:
        src: "{{ workspace }}/NGINX_IP.txt"
        dest: /home/ec2-user/k8s-admin-setup/NGINX_IP.txt
        owner: ec2-user
        group: ec2-user
        mode: '0644'
    
    - name: Copy K8S_IP.txt to the k8s-admin-setup directory
      copy:
        src: "{{ workspace }}/K8S_IP.txt"
        dest: /home/ec2-user/k8s-admin-setup/K8S_IP.txt
        owner: ec2-user
        group: ec2-user
        mode: '0644'
        
    - name: Copy TAG.txt to the k8s-admin-setup directory
      copy:
        src: "{{ workspace }}/TAG.txt"
        dest: /home/ec2-user/k8s-admin-setup/TAG.txt
        owner: ec2-user
        group: ec2-user
        mode: '0644'
        
    - name: Apply the Kubernetes deployment
      shell: |
        cd /home/ec2-user/k8s-admin-setup/
    
        # Fail early if any required file is missing
        for f in TAG.txt K8S_IP.txt NGINX_IP.txt; do
          [ ! -f "$f" ] && echo "❌ $f not found!" && exit 1
        done
    
        export TAG=$(cat TAG.txt | tr -d '[:space:]')
        export K8S_IP=$(cat K8S_IP.txt | tr -d '[:space:]')
        export NGINX_IP=$(cat NGINX_IP.txt | tr -d '[:space:]')
    
        echo "✅ TAG=$TAG"
        echo "✅ K8S_IP=$K8S_IP"
        echo "✅ NGINX_IP=$NGINX_IP"
    
        python3 render.py
        kubectl apply -f deployment.yml
        sleep 300
        chmod +x service_info.sh
        ./service_info.sh
      args:
        executable: /bin/bash



    # - name: Apply the Kubernetes deployment
    #   shell: |
    #     cd k8s-admin-setup
    #     TAG=$(cat TAG.txt | tr -d '[:space:]')
    #     K8S_IP=$(cat K8S_IP.txt | tr -d '[:space:]')
    #     NGINX_IP=$(cat NGINX_IP.txt | tr -d '[:space:]')

        
    #     echo "TAG=$TAG"
    #     echo "K8S_IP=$K8S_IP"
    #     echo "NGINX_IP=$NGINX_IP"

    #     python3 render.py
    #     kubectl apply -f /home/ec2-user/deployment.yml
    #     sleep 300
    #   args:
    #     executable: /bin/bash



















# Below is for more dynamic tags...ayoyinka/chatApp: { counter }

# ---
# - name: Copy and apply Kubernetes deployment
#   hosts: k8s-workstation
#   become: yes
#   tasks:

#     - name: Copy project_deployment.yml to k8s workstation
#       copy:
#         src: chatApp_deployment.yml
#         dest: /home/ec2-user/chatApp_deployment.yml
#         owner: ec2-user
#         group: ec2-user
#         mode: '0644'

#     - name: Apply the Kubernetes deployment
#       shell: |      
#         kops export kubecfg --name=chatApp.k8s.local --state=s3://chatApp-k8s-store
#         mkdir -p /home/ec2-user/.kube
#         chown -R ec2-user:ec2-user /home/ec2-user/.kube
#         chown ec2-user:ec2-user /home/ec2-user/.kube/config
#         until kops validate cluster --name=chatApp.k8s.local --state=s3://chatApp-k8s-store; do echo "Waiting for cluster..."; sleep 30; done
#         kubectl apply -f /home/ec2-user/chatApp_deployment.yml
#         sleep 300
#       args:
#         executable: /bin/bash
